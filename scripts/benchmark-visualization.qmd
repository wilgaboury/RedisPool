---
title: "Benchmark Visualzations"
format: html
editor: visual
---

## Install Packages

```{r}
install.packages("tidyverse")
```

## Use Packages

```{r}
library(tidyverse)
```

## Read In Data

This step requires that `cargo bench` and `collect-bench.py` have been run.

```{r}
data <- read.csv('benchmark.csv')
```

## Reshape and Clean Data

```{r}
clean <- data %>%
  extract(name, c("pool_size", "con_lim"), "^\\w*_(\\d*)_\\w*_(\\d*|\\w*)") %>%
  mutate(per_val = val / itr, across(c(pool_size, con_lim), as.numeric)) %>%
  select(-val, -itr) %>%
  rename(val = per_val, name = bench)

# debug info
# str(clean)

# output to file
# write.csv(clean, "clean_benchmark.csv", row.names=FALSE)
```

```{r}
plot_data <- clean %>% 
  filter(name == "parallel_throughput") %>%
  mutate(val = 1/(val/1e9)) # nano to hz

breaks <- sort((plot_data %>% distinct(pool_size))[['pool_size']])

plot_data %>%
  ggplot(aes(x=pool_size, y=val, color=factor(con_lim))) +
    geom_point() +
    geom_smooth(method = 'loess', aes(group=con_lim)) +
    scale_x_continuous(name="Pool Size", breaks=breaks) +
    scale_y_continuous(name="Throughput (Gb/s)") +
    scale_color_discrete(name="Connection Limit") +
    coord_trans(x="log10")
```

```{r}
plot_data <- clean %>%
  filter(name == "parallel_latency") %>%
  mutate(val = val/1e6) # nano to milli

breaks <- sort((plot_data %>% distinct(pool_size))[['pool_size']])

plot_data %>%
  ggplot(aes(x=pool_size, y=val, color=factor(con_lim))) +
    geom_point() +
    geom_smooth(method = 'lm', aes(group = con_lim)) +
    scale_x_continuous(name="Pool Size", breaks=breaks) +
    scale_y_continuous(name="Latency (ms)") +
    scale_color_discrete(name="Connection Limit") +
    coord_trans(x="log10")
```